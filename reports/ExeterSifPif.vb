
Public Class ExeterSifPif

    Private Sub ExeterSifPif_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        With ReportData1
            .RPTNAME = "Exeter Sif Pif"
            .FileTextBox.Text = Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + "\" + .RPTNAME + .rptdte+.ext
            .shfmt = "TTTTDCTCPTDD"
            .vsql = "Declare @accountArr table(number int Not null,amount money Not null,dueDate datetime Not null,uid Integer Not null, entered datetime Not null)"
            .vsql += " insert into @accountArr(number,amount,dueDate,uid,entered)"
            .vsql += " Select distinct p.number,p.amount,p.deposit,p.uid,p.entered from master With(nolock) "
            .vsql += " Join fact With(nolock) On master.customer=fact.customerid"
            .vsql += " join customcustgroups With(nolock) On customcustgroups.id=fact.customgroupid"
            .vsql += " join PDC_View_FBCS p With(nolock) On p.number=master.number And p.Active=1"
            .vsql += " where customcustgroups.name Like 'ops%exeter%' and closed is null "
            .vsql += " insert into @accountArr(number,amount,dueDate,uid,entered)"
            .vsql += " Select distinct p.number,p.Amount,p.depositdate,p.id,p.DateEntered"
            .vsql += " From master with(nolock)"
            .vsql += " Join fact with(nolock) on master.customer=fact.customerid"
            .vsql += " join customcustgroups with(nolock) on customcustgroups.id=fact.customgroupid"
            .vsql += " join PDCC_View_FBCS p with(nolock) on p.number=master.number and p.isActive=1"
            .vsql += " where customcustgroups.name like 'ops%exeter%'  And Closed Is null"
            .vsql += " insert into @accountArr(number,amount,dueDate,uid,entered)"
            .vsql += " select distinct p.AcctID,p.Amount,p.duedate,p.id,p.Entered"
            .vsql += " from master with(nolock)"
            .vsql += " join fact with(nolock) on master.customer=fact.customerid"
            .vsql += " join customcustgroups with(nolock) on customcustgroups.id=fact.customgroupid"
            .vsql += " join Promises_View_FBCS p with(nolock) on p.acctid=master.number and p.Active=1"
            .vsql += " where customcustgroups.name like 'ops%exeter%' and closed is null and (p.Suspended is null or p.Suspended=0)"
            .vsql += " declare @sifaccounts table(number int not null,sifDateBal money not null)"
            .vsql += " insert into @sifaccounts(number,sifDateBal)"
            .vsql += " Select master.number,current0 + isnull((select sum( pay.totalpaid-pay.OverPaidAmt)"
            .vsql += " From payhistory pay with(nolock) where pay.number=master.number and pay.batchtype in ('PU','PC')"
            .vsql += " And not exists(select * from payhistory nsf with(nolock) where nsf.number=pay.number and nsf.batchtype in ('PUR','PCR') and nsf.ReverseOfUID=pay.UID)"
            .vsql += " And pay.entered>=	cast(case when ISDATE(sifdate.TheData)=1 then sifdate.thedata else '1-1-1900' end as DateTime)) ,0)"
            .vsql += " From master with(nolock)"
            .vsql += " Join debtors with(nolock) on debtors.Number=master.number and debtors.Seq=0"
            .vsql += " Join customer with(nolock) on customer.customer=master.customer"
            .vsql += " Join fact with(nolock) on master.customer=fact.customerid"
            .vsql += " Join customcustgroups with(nolock) on customcustgroups.id=fact.customgroupid"
            .vsql += " Join miscextra SifAmount with(nolock) on SifAmount.Number=master.number and SifAmount.Title='SifAmount'"
            .vsql += " Join miscextra SifDate with(nolock) on SifDate.Number=master.number and SifDate.Title='SifDate'"
            .vsql += " where customcustgroups.name like 'ops%exeter%' and closed is null and isnumeric(SifAmount.thedata)=1"
            .vsql += " And cast(case when isnumeric(SifAmount.thedata)=1 then SifAmount.TheData else '0.00' end as Money)>0.00"
            .vsql += " Select master.number [Vendor Account],case when customcustgroups.name like '%insurance%' then 'Insurance' else 'Regular'  end as [Exeter List or Reference Number],"
            .vsql += " master.account [Exeter Account Number],case when debtors.lastname='' then left(debtors.name,charindex(',',debtors.name)-1) else debtors.lastname end [Customer Last Name],"
            .vsql += " Convert(varchar,master.received,101) [Date Account Received],	master.original [Initial Placed Balance],"
            .vsql += " Case when sifaccounts.number is null then 'Normal Guidelines' when sifaccounts.sifDateBal is not null "
            .vsql += " And round(cast(case when isnumeric(SifAmount.thedata)=1 then SifAmount.thedata else '0.00' End as Money) / sifaccounts.sifDateBal,2) >= (customer.BlanketSif / 100.0)  then 'Normal Guidelines'"
            .vsql += " when round(cast(case when isnumeric(SifAmount.thedata)=1 then SifAmount.thedata else '0.00' End as Money) / master.original,2)>= (customer.BlanketSif / 100.0)  then 'Normal Guidelines'"
            .vsql += " when round(cast(case when isnumeric(SifAmount.thedata)=1 then SifAmount.thedata else '0.00' End as Money) / master.original,2)"
            .vsql += " - (customer.BlanketSif / 100.0) between -.01 and .01 then 'Normal Guidelines' when cast(case when ISDATE(sifdate.TheData)=1 then sifdate.thedata else '1-1-1900' end as DateTime) between '3-1-2020' and '5-31-2020' "
            .vsql += " And round(cast(case when isnumeric(SifAmount.thedata)=1 then SifAmount.thedata else '0.00' End as Money) / master.original,2)"
            .vsql += " - .35 >= -.01  then 'Tax Season Guidelines' when cast(case when ISDATE(sifdate.TheData)=1 then sifdate.thedata else '1-1-1900' end as DateTime)between '3-1-2020' and '5-31-2020' "
            .vsql += " And round(cast(case when isnumeric(SifAmount.thedata)=1 then SifAmount.thedata else '0.00' End as Money) / master.original,2)"
            .vsql += " - .35 >= -.01  then 'Tax Season Guidelines' else ISNULL((select top 1 case when notes.comment like '%per%,%' then "
            .vsql += " Left(cast(notes.comment as varchar(200)),charindex(',',cast(notes.comment as varchar(200)))-1)  + ' - ' + convert(varchar,notes.created,101)"
            .vsql += " Else cast(notes.comment As varchar(200))  + ' - ' + convert(varchar,notes.created,101) end from notes with(nolock)"
            .vsql += " where notes.number=master.number and notes.comment like '%per%settle%approv%' order by notes.created desc),'') end [Approved By/Date],"
            .vsql += " Case when sifaccounts.number is null then master.original else sifamount.thedata end [Settlement Amount],	"
            .vsql += " Case when sifaccounts.number is null then 1.0 else case when sifaccounts.sifDateBal is not null then cast(case when isnumeric(SifAmount.thedata)=1 then SifAmount.thedata else '0.00' End as Money) / sifaccounts.sifDateBal"
            .vsql += " Else cast(Case When isnumeric(SifAmount.thedata)=1 Then SifAmount.thedata Else '0.00' End as Money) / master.original   end end [Settlement Percentage],	"
            .vsql += " (select COUNT(distinct pay.uid)  from payhistory pay with(nolock) where pay.number=master.number and pay.batchtype in ('PU','PC')"
            .vsql += " And not exists(select * from payhistory nsf with(nolock) where nsf.number=pay.number and nsf.batchtype in ('PUR','PCR') and nsf.ReverseOfUID=pay.UID)"
            .vsql += " And pay.entered>=	case when sifaccounts.number is null then master.received else cast(case when ISDATE(sifdate.TheData)=1 then sifdate.thedata else '1-1-1900' end as DateTime)	end) + (select COUNT(uid) from @accountArr a where a.number=master.number) [Number of Payments],"
            .vsql += " isnull((select top 1 convert(varchar,pay.entered,101)  from payhistory pay with(nolock) where pay.number=master.number and pay.batchtype in ('PU','PC')"
            .vsql += " And pay.entered >= case when sifaccounts.number is null then master.received else cast(case when ISDATE(sifdate.TheData)=1 then sifdate.thedata else '1-1-1900' end as DateTime)	end"
            .vsql += " order by pay.entered) ,isnull((select convert(varchar,min(a.duedate),101) from @accountArr a where a.number=master.number) ,sifdate.TheData)) [Settlement Start Date], "
            .vsql += " Case when master.current0>5 and isnull((select sum(a.amount) from @accountArr a where a.number=master.number),0)=0 and sifaccounts.number is null then ''"
            .vsql += " when sifaccounts.number is null and (select sum(a.amount) from @accountArr a where a.number=master.number)<master.current0-5then ''"
            .vsql += " Else ISNULL(case when master.current0>5 and (select sum(a.amount) from @accountArr a where a.number=master.number)=0 and sifaccounts.number is null then ''"
            .vsql += " when sifaccounts.number is null and (select sum(a.amount) from @accountArr a where a.number=master.number)<master.current0-5 then ''	"
            .vsql += " when -paid>=cast(case when isnumeric(SifAmount.thedata)=1 then SifAmount.thedata else '0.00' End as Money)-5 then (select top 1 convert(varchar,pay.entered,101)  from payhistory pay with(nolock)"
            .vsql += " where pay.number=master.number and pay.batchtype in ('PU','PC') and pay.entered>=cast(case when ISDATE(sifdate.TheData)=1 then sifdate.thedata else '1-1-1900' end as DateTime)"
            .vsql += " order by pay.entered desc) else (select convert(varchar,MAX(a.duedate),101) from @accountArr a where a.number=master.number) End,'') End [Settlement End Date],	"
            .vsql += " Case when sifaccounts.number is null and isnull((select sum(a.amount) from @accountArr a where a.number=master.number),0) between 1 and master.current0-5 then 'Payer'"
            .vsql += " when sifaccounts.number is null and isnull((select sum(a.amount) from @accountArr a where a.number=master.number),0) > master.current0-5 then 'PIF Arrangment'"
            .vsql += " when master.lastpaid < DATEADD(day,-60,{fn curdate()}) then 'Last Paid: ' +CONVERT(varchar,master.lastpaid,101) else ''  end [Notes]"
            .vsql += " From master with(nolock)"
            .vsql += " Join debtors with(nolock) on debtors.Number=master.number and debtors.Seq=0"
            .vsql += " Join customer with(nolock) on customer.customer=master.customer"
            .vsql += " Join fact with(nolock) on master.customer=fact.customerid"
            .vsql += " Join customcustgroups with(nolock) on customcustgroups.id=fact.customgroupid"
            .vsql += " Left outer join miscextra SifAmount with(nolock) on SifAmount.Number=master.number and SifAmount.Title='SifAmount'"
            .vsql += " Left outer join miscextra SifDate with(nolock) on SifDate.Number=master.number and SifDate.Title='SifDate'"
            .vsql += " Left outer join miscextra SifNumberPays with(nolock) on SifNumberPays.Number=master.number and SifNumberPays.Title='SifNumberPays'"
            .vsql += " Left outer join miscextra SifMonthlyPayAmount with(nolock) on SifMonthlyPayAmount.number=master.number and SifMonthlyPayAmount.title='SifMonthlyPayAmount'"
            .vsql += " Left outer join @sifaccounts sifaccounts on sifaccounts.number=master.number"
            .vsql += " where customcustgroups.name like 'ops%exeter%' and closed is null and ((isnumeric(SifAmount.thedata)=1 and cast(case when isnumeric(SifAmount.thedata)=1 then SifAmount.TheData else '0.00' end as Money)>0.00)"
            .vsql += " or (select sum(a.amount) from @accountArr a where a.number=master.number)> 0 or exists(select * from payhistory p with(nolock) where p.number=master.number and p.batchtype in ('PU','PC')))"
            .vsql += " and ((exists(select * from payhistory p with(nolock) where p.number=master.number and p.batchtype in ('PU','PC')) and -paid>0)"
            .vsql += " Or exists(select * from @accountArr a where a.number=master.number)) and (cast(case when isdate(sifdate.thedata)=1 then sifdate.thedata else '1-1-1900' end as datetime) between @start and @end"
            .vsql += " or ( exists(select * from @accountArr a where a.number=master.number and a.entered between @start and @end) and (select COUNT(*) from payhistory p with(nolock) where p.number=master.number and p.batchtype in ('PU','PC') )=0)"
            .vsql += " or (exists(select * from payhistory p with(nolock) where p.number=master.number and p.batchtype in ('PU','PC') and p.entered between @start and @end)"
            .vsql += " And (select COUNT(*) from payhistory p with(nolock) where p.number=master.number and p.batchtype in ('PU','PC') )=1"
            .vsql += " and (isdate(sifdate.thedata)=0 or sifdate.thedata is null) and not exists(select * from PDC_View_FBCS p with(nolock) where p.number=master.number )"
            .vsql += " And not exists(select * from PDCC_View_FBCS p with(nolock) where p.number=master.number ) and not exists(select * from Promises_View_FBCS p with(nolock) where p.acctid=master.number )))"
        End With

    End Sub

	Private Sub ReportData1_Load(sender As Object, e As EventArgs) Handles ReportData1.Load

	End Sub
End Class